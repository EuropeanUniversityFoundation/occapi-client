<?php

/**
 * @file
 * Contains occapi_entities_bridge.module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Form\FormStateInterface;
use Drupal\occapi_entities_bridge\OccapiImportManager as Manager;

/**
 * Implements hook_ENTITY_TYPE_prepare_form().
 */
function occapi_entities_bridge_occapi_provider_prepare_form(EntityInterface $entity, $operation, FormStateInterface $form_state) {
  if ($operation == 'preview') {
    $hei_id = $entity->get('hei_id');

    // Check if the Institution is present in the system.
    $result = \Drupal::service('occapi_entities_bridge.manager')
      ->validateInstitution($hei_id);

    if (! $result['status']) {
      \Drupal::service('messenger')->addWarning($result['message']);
    } else {
      \Drupal::service('messenger')->addMessage($result['message']);
    }
  }
}

/**
 * Implements hook_base_field_info().
 *
 * Add new base fields to the OCCAPI entity types to store remote API data.
 */
function occapi_entities_bridge_entity_base_field_info(EntityTypeInterface $entity_type) {
  $occapi_entity_types = [
    Manager::PROGRAMME_ENTITY,
    Manager::COURSE_ENTITY
  ];

  if (\in_array($entity_type->id(), $occapi_entity_types)) {
    $fields[Manager::REMOTE_ID] = BaseFieldDefinition::create('string')
      ->setLabel(t('Remote ID'))
      ->setDisplayOptions('form', [
        'type' => 'textfield',
        'weight' => 101,
      ])
      ->setDisplayConfigurable('form', FALSE);

    $fields[Manager::REMOTE_URL] = BaseFieldDefinition::create('string')
      ->setLabel(t('Remote URL'))
      ->setDisplayOptions('form', [
        'type' => 'textfield',
        'weight' => 102,
      ])
      ->setDisplayConfigurable('form', FALSE);

    if ($entity_type->id() === Manager::COURSE_ENTITY) {
      $fields[Manager::JSON_META] = BaseFieldDefinition::create('json')
        ->setLabel(t('JSON metadata'))
        ->setDisplayOptions('form', [
          'type' => 'json_textarea',
          'weight' => 103,
        ])
        ->setDisplayConfigurable('form', FALSE);
    }

    return $fields;
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function occapi_entities_bridge_form_course_add_form_alter(&$form, FormStateInterface $form_state) {
  _occapi_entities_bridge_api_fields($form, $form_state);
  _occapi_entities_bridge_api_metadata($form, $form_state);

    dpm($form);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function occapi_entities_bridge_form_course_edit_form_alter(&$form, FormStateInterface $form_state) {
  _occapi_entities_bridge_api_fields($form, $form_state);
  _occapi_entities_bridge_api_metadata($form, $form_state);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function occapi_entities_bridge_form_programme_add_form_alter(&$form, FormStateInterface $form_state) {
  _occapi_entities_bridge_api_fields($form, $form_state);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function occapi_entities_bridge_form_programme_edit_form_alter(&$form, FormStateInterface $form_state) {
  _occapi_entities_bridge_api_fields($form, $form_state);
}

/**
 * Performs the actual form alter for the common fields.
 */
function _occapi_entities_bridge_api_fields(&$form, FormStateInterface $form_state) {
  $remote_id  = $form[Manager::REMOTE_ID];
  $remote_url = $form[Manager::REMOTE_URL];

  $form['api_fields'] = [
    '#type' => 'details',
    '#title' => t('API fields'),
    '#tree' => FALSE,
    '#weight' => 100
  ];

  $remote_id['widget'][0]['value']['#attributes']['readonly']  = 'readonly';
  $remote_url['widget'][0]['value']['#attributes']['readonly'] = 'readonly';

  $form['api_fields'][Manager::REMOTE_ID]  = $remote_id;
  $form['api_fields'][Manager::REMOTE_URL] = $remote_url;

  unset($form[Manager::REMOTE_ID]);
  unset($form[Manager::REMOTE_URL]);
}

/**
 * Performs the actual form alter for the Course metadata field.
 */
function _occapi_entities_bridge_api_metadata(&$form, FormStateInterface $form_state) {
  $metadata = $form[Manager::JSON_META];

  $metadata['widget'][0]['value']['#attributes']['readonly']  = 'readonly';

  $form['api_fields'][Manager::JSON_META] = $metadata;

  unset($form[Manager::JSON_META]);
}
